參考來源
https://blog.johnwu.cc/article/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-centos-red-hat.html

官方文件網站
https://www.elastic.co/guide/index.html

Elasticsearch
官網下載rpm檔(7.6.2)
https://www.elastic.co/downloads/elasticsearch
# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.2-x86_64.rpm

透過 SCP 或 WinSCP 放到 /tmp/，執行以下指令安裝：
# rpm -ivh /tmp/elasticsearch-*.rpm
# rpm -ivh elasticsearch-7.6.2-x86_64.rpm
啟動
systemctl start elasticsearch
查看狀態
systemctl status elasticsearch
curl "http://localhost:9200/_cat/nodes"

設定
記憶體越大，查詢速度越快。但 Elasticsearch 使用記憶體有兩個條件限制：

1.最高只能設定為系統的 50%。例：系統 8GB，Elasticsearch 只能設定 4GB。
2.不能超過 32GB。
違反以上兩個條件，Elasticsearch查詢速度會不升反減。

設定 Elasticsearch 記憶體使用上限及下限。
#vim /etc/elasticsearch/jvm.options
# Xms 記憶體使用下限
# Xmx 記憶體使用上限
-Xms1g
-Xmx1g

解決 Memery問題 / max file descriptors too low問題
# vim /etc/sysctl.conf 追加以下内容：
vm.max_map_count=655360
儲存後，執行：
# sysctl -p
# vim /etc/security/limits.conf  追加下面這段:
elastic soft nofile 65536
elastic hard nofile 65536
儲存後，執行：
# su elastic -c 'ulimit -Hn'
>>65536  //成功

設定 Elasticsearch 綁定的 IP 及 Port。
!!!network.host(注意配置文件格式不是以#开头的要空一格， ：后要空一格) 为network.host: 0.0.0.0
# vi /etc/elasticsearch/elasticsearch.yml
# 綁定特定 IP
# network.bind_host: 192.168.56.101
# 綁定多個 IP
# network.host: ["192.168.56.101", "127.0.0.1"]
# 綁定所有 IP
network.bind_host: 0.0.0.0
# 綁定 Port，預設其實就是 9200
http.port: 9200

!!!這個有效  vim config/elasticsearch.yml
#複製貼上下面內容 (localhost改成自己的IP)
node.name: node-1
network.host: localhost
cluster.initial_master_nodes: ["node-1"]

設定完成後，重新啟動：
systemctl restart elasticsearch

試試看用 IP 查詢 nodes
curl "http://192.168.43.206:9200/_cat/nodes"

防火牆很多新手會忘記防火牆的存在…
兩個解法：

完全關閉
systemctl stop firewalld
systemctl disable firewalld

增加防火牆規則
firewall-cmd --add-service=elasticsearch --permanent
firewall-cmd --reload
為了以下教學順利，選擇 1 會比較方便，不用每次都加規則。
正式環境請選擇 2 會比較安全。

=========================================================================================
Beats-Filebeat
# wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.6.2-x86_64.rpm
===========================================================================================
Logstash
* logstash_Home ==>/usr/share/logstash
* logstash_seetint ==>/etc/logstash
# wget https://artifacts.elastic.co/downloads/logstash/logstash-7.6.2.rpm

<錯誤問題>==>could not find java; set JAVA_HOME or ensure java is in PATH
<解決方式>
我們只需要在logstash或logstash.lib.sh的行首位置添加兩個環境變量（根據自己jdk安裝路徑修改）：
export JAVA_HOME=/usr/java/jdk
export PATH=$PATH:$JAVA_HOME/bin

journalctl -ex 查看
檢查PATH
# echo $PATH
檢察系統環境變數
# set |grep 
#環境變數區分:https://www.itread01.com/p/131873.html
<無效>vim /etc/profile

# JAVA_HOME=/usr/java/jdk1.8.0_181-cloudera
# JRE_HOME=/usr/java/jdk1.8.0_181-cloudera/jre
# PATH=$JAVA_HOME/bin:$JRE_HOME/bin
# CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
# export JAVA_HOME JRE_HOME PATH CLASSPATH

(參考1)https://yq.aliyun.com/articles/656561
JAVA_HOME=/usr/local/src/jdk
JRE_HOME=/usr/local/src/jdk/jre
PATH=JAVA_HOME/bin:JAVA_HOME/lib/dt.jar:JRE_HOME/lib
export JAVA_HOME JRE_HOME PATH CLASSPATH
(參考2)https://www.twblogs.net/a/5c2f7532bd9eee35b3a4b28e
export JAVA_HOME=/usr/jdk/
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH

設定config檔
vim /etc/logstash/conf.d/pipeline.conf
輸入以下內容：
*.在 output 的部分 index 後面多了 %{+xxxx.ww}，這是為了把 Log 按每週區分。
*.未安裝beats前input需改成input { stdin { } }
input {
  beats {
    port => 5044
  }
}
filter {
  grok {		
      match => [ "message", "%{TIMESTAMP_ISO8601:logTimestamp} \[%{NUMBER:thread}\] %{DATA:logType} %{DATA:logger} - %{GREEDYDATA:detail}" ]
  }
  mutate {
    add_tag => ["logstash"]
  }
}
output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "%{[@metadata][beat]}-%{+xxxx.ww}"
    document_type => "%{[@metadata][type]}"
  }
}



debug模式
# vim config/logstash.yml

加入下面這段
log.level: debug
path.logs: /var/log/logstash

設定IP
/etc/logstash/logstash.yml中 http.host位置

啟動
systemctl start logstash
sudo /usr/share/logstash/bin/logstash --path.settings /etc/logstash
查看狀態：
systemctl status logstash

<解決CPU使用率過高>
修改/etc/logstash/logstash.yml中，config.reload.interval 由3s改常為120s

ELK 教學 - Logstash Grok Filter 建立欄位
https://blog.johnwu.cc/article/elk-logstash-grok-filter.html

===========================================================================================

Kibana
#wget https://artifacts.elastic.co/downloads/kibana/kibana-7.6.2-x86_64.rpm

設定 IP 及 Port
vi /etc/kibana/kibana.yml

# 綁定 Port，預設其實就是 5601
server.port: 5601
# 0.0.0.0 表示綁定所有 IP
server.host: "0.0.0.0"


啟動
systemctl start kibana

